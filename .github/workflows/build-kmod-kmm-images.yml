# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

name: Build Kmod KMM images

on:
  push:
    branches: [ main ]
    paths:
      - 'build-matrix.json'
      - 'driver-toolkit/driver-toolkit.json'
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force rebuild existing images'
        required: false
        default: false
        type: boolean

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Load build matrix
        id: set-matrix
        run: |
          echo "matrix=$(cat build-matrix.json | tr -d '\n')" >> $GITHUB_OUTPUT

  build:
    needs: setup-matrix
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    strategy:
      matrix:
        include: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
      fail-fast: false
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1
          role-duration-seconds: 7200
      
      - name: Install container tools and RPM utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y podman rpm2cpio cpio
      
      - name: Build images for driver ${{ matrix.driver }}
        env:
          QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
          QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FORCE_BUILD: ${{ inputs.force_build }}
        run: |
          echo "Building for driver: ${{ matrix.driver }}"
          echo "OCP versions: ${{ join(matrix.ocp_versions, ', ') }}"
          
          # Make build script executable
          chmod +x ./build-kmod-kmm.sh
          
          # Build all kernel images for this driver (script handles OCP version iteration and deduplication)
          ./build-kmod-kmm.sh "${{ matrix.driver }}"